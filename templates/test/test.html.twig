{% extends 'base.html.twig' %}

{% block title %}
	Calendar_test
{% endblock %}

{% block header %}{% endblock %}
{% block sidebar %}{% endblock %}
{% block footer %}{% endblock %}

{% block body %}


	<div
		class="tab-pane active" id="users">
		{#---------------------------------------------Modal-------------------------------------------- #}
		{% embed "components/modal.html.twig" %}
			{% set modalType = "modal-lg" %}
			{% set id = "calendarForm" %}
			{% set buttonTitle = "Ajouter un utilisateur" %}
			{% block modalTitle %}Ajouter un evènement
			{% endblock %}
			{% block dashboard %}
				{% include "calendar/new.html.twig" %}
			{% endblock %}
		{% endembed %}
		{#--------------------------------------------Fin modal------------------------------------------- #}


	
	</div>

	{# --------------------------------------------------Calendar------------------------------------------ #}
	<div class="card-body">
		<div id='calendar2'></div>
	</div>
	{#-------------------------------------------------Fin Calendar-----------------------------------------#}

	{#----------------------------------------------- .Launch Modal info Button--------------------------------------#}

<!-- .modal -->
<div class="modal fade" id="Mysmallmodal">
	<div class="modal-dialog modal-sm">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">
                	Information
                </h4>                                                             
			</div> 
			<div class="modal-body">
				{% for calendar in calendar %}
				{{calendar.title}} {{calendar.teacherName}}
				{% endfor %}
			</div>   
		</div>                                                                       
	</div>                                      
</div>




{#-----------------------------------------------Fin Modal info Button------------------------------------------#}



	{# ---------------------------------------------------DELETE-------------------------------------------- #}
	{# {% for calendar in calendar %}
	<form method="post" action="{{ path('calendar_delete', {'id': calendar.id}) }}" onsubmit="return confirm('Are you sure you want to delete this item?');" style="position:fixed; top:30%; left:50%; background-color:lightGray; z-index:1000; color:black; display:none" id="delete" >
    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ calendar.id) }}">
    <button class="btn btn-danger">Delete</button>
	</form>
	{% endfor %} #}
	{# -------------------------------------------------FIN DELETE-------------------------------------------#}

	{# <div id='popup' style='position:fixed; top:30%; left:50%; background-color:lightGray; z-index:1000; color:black; display: none; '>
	    <form name="teacherName" method='POST' action='' >
	    <label for="Teacher">Choose a Teacher:</label>
	       <select id="monTeacher">
	            {% for calendar in calendrier %}
	            <option>{{calendar.teacherName}}</option>
	            {% endfor %}
	       </select>
	        <button type='submit' name='valider' value='valider'>Valider</button>
	    </form>
	</div> #}


	<script>

		window.onload = () => {


	var calendarEl = document.getElementById('calendar2');

	let cookieStart = '{{cookieStart}}';	
	let cookieEnd = '{{cookieEnd}}';
	let cookieAllDay = '{{cookieAllDay}}'
	let urlVerif = document.location.href;
	let urlcompte = urlVerif.length;
	let searchParams = new URLSearchParams(window.location.search);
	let UrlParamStart = searchParams.get('start');
	let UrlParamEnd = searchParams.get('end');
	var calendar = new FullCalendar.Calendar(calendarEl, {
	headerToolbar: {
	left: 'prev,next today',
	center: 'title',
	right: 'dayGridMonth,timeGridWeek,timeGridDay'
	},

	defaultView: 'month',
	navLinks: true, // can click day/week names to navigate views
	businessHours: true, // display business hours
	editable: true,
	selectable: true,
	selectMirror: true,
	droppable: true, // this allows things to be dropped onto the calendar
	select: function (arg) {

		let urlVerif = document.location.href;
		let urlcompte = urlVerif.length;
		var startS = JSON.stringify(arg.start);
		var endS = JSON.stringify(arg.end);
		var dtExpire = new Date();
		let donnees = {
			'start' : startS,
			'end' : endS
			}
   		dtExpire.setTime(dtExpire.getTime() + 3600 * 1000);
		document.cookie = "start= "+arg.start+"; expires=" + new Date(dtExpire).toUTCString() + "; path=/";
		document.cookie = "end= "+arg.end+"; expires=" + new Date(dtExpire).toUTCString() + "; path=/";
		document.cookie = "all= "+arg.allDay+"; expires=" + new Date(dtExpire).toUTCString() + "; path=/";

		
		function getCookie(name){
			if(document.cookie.length == 0)
			return null;

			var regSepCookie = new RegExp('(; )', 'g');
			var cookies = document.cookie.split(regSepCookie);

			for(var i = 0; i < cookies.length; i++){
			var regInfo = new RegExp('=', 'g');
			var infos = cookies[i].split(regInfo);
			if(infos[0] == name){
				return unescape(infos[1]);
			}
			}
        return null;
  	    }
		
	
		function calendrierShow(){
				$('#calendarForm').modal('show');
			}

		calendrierShow();
	
	function initialisation(){

		let maClosure = () => {
		
		//?donnees={"start":"2022-04-10T22:00:00.000Z",end:"2022-04-15T22:00:00.000Z"}
		let urlmodif = window.history.pushState('api', 'New Page Title', "/api?start=" + donnees['start'] + "&end=" + donnees['end']);


		let urlVerifmodif = document.location.href;

		

		if(urlVerif != urlVerifmodif){


			if (confirm('Vous souhaitez entrer un nouvel évènement ?')) {

					calendrierShow();

				}
			
			}else{

					//setTimeout(calendrierShow, 2000);

			}


		}

    	return maClosure;
	}

	//calendrierShow();


	let debut = initialisation()


	debut();


	$(document).ready(function(){

		
		var xhr = new XMLHttpRequest;
	
			xhr.onreadystatechange = function() {
				if (xhr.readyState == 4 && (xhr.status == 200 || xhr.status == 0)) {
					callback(xhr.responseText);
				}
			};

			xhr.open("GET", "/api?start=" + donnees['start'] + "&end=" + donnees['end'], true);
			xhr.send(JSON.stringify(donnees));
		

		$("#envoyerFormulaire").click(function(){

			var title = $("#title").val();
			var description = $("#description").val();
			var teacherName = $("#teacher").val();

			if(cookieStart==""){
				let start = cookieStart,
				end = cookieEnd,
				all = cookieAllDay
			}else{

				let start = arg.start,
				end = arg.end,
				allDay = arg.allDay
			}
			calendar.addEvent({

						title: title,
						start: arg.start,
						end: arg.end,
						allDay: arg.allDay,
						teacherName: teacherName,
						description: description

				})


			
			calendar.unselect();

			
		})

		
})


		
},



				eventClick: function (arg) {
				if (confirm('Are you sure you want to delete this event?')) {


					arg.event.remove()
				}

				
				},
				eventOverlap: function(stillEvent, movingEvent) {
    			return stillEvent.allDay && movingEvent.allDay;
  				},

				/*eventMouseEnter:function( mouseEnterInfo ) {

					$('#Mysmallmodal').modal('show');
				 },*/
				editable: true,
				dayMaxEvents: true, // allow "more" link when too many events
				events: [{% for calendar in calendar %}{
				id: '{{calendar.id}}',
				title:'{{ calendar.title }}',
				start: '{{ calendar.start |date('Y-m-d H:i:s') }}',
				end: '{{ calendar.end |date('Y-m-d H:i:s') }}',
				description: '{{ calendar.description }}',
				backgroundColor: '{{ calendar.backgroundColor }}'

				},{% endfor %}]

			
				})

				$.ajax(this.href, {
                       
                        success: function() {

							if(urlcompte > 50){
								
                           		$('#calendarForm').modal('show');
						   
						   	}

							
                        }


						
                    });


				//$('#calendarFomr').modal('show');

				calendar.on('eventAdd', (e) => {
				let url = '/api/edit'
				let donnees = {
				"title": e.event.title,
				"start": e.event.start,
				"end": e.event.end,
				"description": e.event.extendedProps.description,
				"teacherName": e.event.extendedProps.teacherName,
				"teacherId": " ",
				"backgroundColor": '#0080ff'


				}


				let xhr = new XMLHttpRequest

				xhr.open("PUT", url, true)
				xhr.send(JSON.stringify(donnees))


				})

				
				

				calendar.render();

				calendar.on('eventChange', (e) => {
				let url = `/api/${e.event.id}/edit`
				let donnees = {
				"title": e.event.title,
				"start": e.event.start,
				"end": e.event.end,
				"description": e.event.extendedProps.description,
				"backgroundColor": e.event.backgroundColor


				}


				let xhr = new XMLHttpRequest

				xhr.open("PUT", url, true)
				xhr.send(JSON.stringify(donnees))



				})



				calendar.on('eventRemove', (e) => {
				let url = `/api/${e.event.id}/delete`
				let donnees = {
				"id": e.event.id
				}


				let xhr = new XMLHttpRequest

				xhr.open("PUT", url, true)
				xhr.send(JSON.stringify(donnees))


				});

		/*calendar.select( start, (e) => {
		let donnees = {
			"start": e.event.start,
			"end" : e.event.end
		}
		
			$.ajax({
        type: 'POST',
        url: '/test2',
        data: {json: JSON.stringify(donnees)},
        dataType: 'json'            
    })

	});*/

	//setTimeout(changeUrl(urlInit),10000);
	

}
	</script>
{% endblock %}
